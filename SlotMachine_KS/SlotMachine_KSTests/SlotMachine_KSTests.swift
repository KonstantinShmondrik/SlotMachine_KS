//
//  SlotMachine_KSTests.swift
//  SlotMachine_KSTests
//
//  Created by –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –®–º–æ–Ω–¥—Ä–∏–∫ on 09.01.2023.
//

import XCTest
import Combine
@testable import SlotMachine_KS

final class SlotMachine_KSTests: XCTestCase {
    var cancellable = Set<AnyCancellable>()
    var viewModel: SlotViewModel!
    
    override func setUpWithError() throws {
        viewModel = SlotViewModel()
    }
    
    override func tearDownWithError() throws {
        cancellable = []
    }
    
    // –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—å—é–º–æ–¥–µ–ª–∏
    func testButtonTextChange() {
        let expected = "–ö—Ä—É—Ç–∏—Ç—å!"
        let expectation = XCTestExpectation()
        
        viewModel
            .$buttonText
            .dropFirst()
            .sink { value in
                XCTAssertEqual(value, expected); expectation.fulfill()
            }
            .store(in: &cancellable)
        
        // when
        viewModel.running = false
        
        // Then
        wait(for: [expectation], timeout: 1)
    }
    
    // –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø–æ–±–µ–¥—ã, –∫–æ–≥–¥–∞ –≤—ã–ø–∞–¥–∞–µ—Ç —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —ç–º–æ–¥–∑–∏ –ø–æ–¥—Ä—è–¥
    func testWin() {
        let expected = "–¢—ã –ø–æ–±–µ–¥–∏–ª!"
        let expectation = XCTestExpectation()
        
        viewModel
            .$titleText
            .dropFirst()
            .sink { value in
                XCTAssertEqual(value, expected); expectation.fulfill()
            }
            .store(in: &cancellable)
        
        // when
        viewModel.slot1Emoji = "üçã"
        viewModel.slot2Emoji = "üçã"
        viewModel.slot3Emoji = "üçã"
        
        viewModel.running = false
        viewModel.gameStarted = true
        
        // Then
        wait(for: [expectation], timeout: 1)
    }
    
}
